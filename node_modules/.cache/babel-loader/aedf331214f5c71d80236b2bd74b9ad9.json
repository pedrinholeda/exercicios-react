{"ast":null,"code":"import _defineProperty from \"/Users/pedroleda/Desktop/exercicios-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pedroleda/Desktop/exercicios-react/src/componetes/Familia.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nexport default (props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, \"Familia\"), React.Children.map(), React.cloneElement(props.children, _objectSpread({}, props))));","map":{"version":3,"sources":["/Users/pedroleda/Desktop/exercicios-react/src/componetes/Familia.jsx"],"names":["React","props","Children","map","cloneElement","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAeC,KAAK,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGD,KAAK,CAACE,QAAN,CAAeC,GAAf,EAFH,EAGGH,KAAK,CAACI,YAAN,CAAmBH,KAAK,CAACI,QAAzB,oBAAwCJ,KAAxC,EAHH,CADF","sourcesContent":["import React from \"react\";\n\nexport default props => (\n  <div>\n    <h1>Familia</h1>\n    {React.Children.map()}\n    {React.cloneElement(props.children, { ...props })}\n\n    {/* {React.cloneElement(props.children, { sobrenome: props.sobrenome })} */}\n\n    {/* {props.children} */}\n  </div>\n);\n"]},"metadata":{},"sourceType":"module"}